```javascript=
let points = [[0, 100], [0, 120], [-200, 0], [0, -120], [0, -100], [100, 0], [150, 50], [150, -50], [100, 0]];
let startColor, endColor;

function setup() {
  createCanvas(windowWidth, windowHeight);
  startColor = color(255, 173, 173);
  endColor = color(160, 196, 255);
}

function draw() {
  background(220);
  strokeWeight(3);
  noFill();
  
  let xSpacing = 10; // 設定 x 軸間距
  let ySpacing = 10; // 設定 y 軸間距
  
  for (let j = 0; j < 5; j++) { // 迴圈產生五個圖形
    beginShape();
    for (let i = 0; i < points.length; i++) {
      let x = points[i][0] + j * xSpacing; // 根據間距計算 x 座標
      let y = points[i][1] + j * ySpacing; // 根據間距計算 y 座標
      vertex(width / 2 + x, height / 2 + y);
    }
    endShape(CLOSE);
  }
  for (let i = 1; i <= 5; i++) {
    let factor = i / 5;
    let x1 = width / 2 + points[2][0] * mouseX / width * factor;
    let y1 = height / 2 + points[2][1] * mouseX / width * factor;
    let x2 = width / 2 + points[3][0] * mouseX / width * factor;
    let y2 = height / 2 + points[3][1] * mouseX / width * factor;
    let c1 = lerpColor(startColor, endColor, factor);
    let c2 = lerpColor(endColor, startColor, factor);
    gradientLine(x1, y1, x2, y2, c1, c2);
  }
}

function gradientLine(x1, y1, x2, y2, c1, c2) {
  for (let i = 0; i <= dist(x1, y1, x2, y2); i++) {
    let inter = map(i, 0, dist(x1, y1, x2, y2), 0, 1);
    let c = lerpColor(c1, c2, inter);
    stroke(c);
    line(x1 + i * (x2 - x1) / dist(x1, y1, x2, y2), y1 + i * (y2 - y1) / dist(x1, y1, x2, y2), 
         x1 + (i + 1) * (x2 - x1) / dist(x1, y1, x2, y2), y1 + (i + 1) * (y2 - y1) / dist(x1, y1, x2, y2));
  }
}




```

```javascript=
let shape = [];
let scale = 1.5;

function setup() {
  createCanvas(windowWidth, windowHeight);
  colorMode(RGB, 255, 255, 255, 1);
  shape = createShape([
    [0, 50],
    [0, 60],
    [-100, 0],
    [0, -60],
    [0, -50],
    [50, 0],
    [75, 25],
    [75, -25],
    [50, 0]
  ]);
}

function draw() {
  background(255);
  translate(width / 2, height / 2);

  // 根據滑鼠移動改變形狀的大小
  let size = map(mouseX, 0, width, 10, 50);
  scale = map(mouseX, 0, width, 1, 3);

  for (let i = 0; i < shape.length; i++) {
    let point1 = shape[i];
    let point2 = shape[(i + 1) % shape.length];
    let color1 = color(random(255), random(255), random(255), 1);
    let color2 = color(random(255), random(255), random(255), 1);
    setGradient(
      point1.x * scale,
      point1.y * scale,
      color1,
      point2.x * scale,
      point2.y * scale,
      color2
    );
  }

  // 顯示 "TKUET"
  textSize(size);
  textAlign(CENTER, CENTER);
  fill(random(255), random(255), random(255), 1);
  text("TKUET", 0, 0);
}

function setGradient(x1, y1, c1, x2, y2, c2) {
  let gradient = drawingContext.createLinearGradient(x1, y1, x2, y2);
  gradient.addColorStop(0, c1);
  gradient.addColorStop(1, c2);
  drawingContext.strokeStyle = gradient;
  strokeWeight(10);
  line(x1, y1, x2, y2);
}

function createShape(points) {
  let shape = [];
  for (let i = 0; i < points.length; i++) {
    let point = createVector(points[i][0], points[i][1]);
    shape.push(point);
  }
  return shape;
}

```